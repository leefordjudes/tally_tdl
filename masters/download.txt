[Report: AP Tally Export Master Request]
	Use: Rpc Request	
	Local: Field: Rpc Request Method: Set as: "tally_export_master"

[Collection: AP Tally Export Master Data Source]
	Use				: Rpc Data Source
	RemoteRequest	: AP Tally Export Master Request: UTF8
	JSON Object Path: "data:1"
	
;; Ref: https://tdlexpert.com/index.php?threads/some-useful-string-functions.4187/
[Function:Substr]	
	Parameter:sSource:String
	Parameter:nStart:Number
	Parameter:nLen:Number
	Returns:String

	100: Return: $$StringPart:##sSource:(##nStart-1):##nLen
	
[Function: AP Download Masters ]
	Variable: ProgressCount		: Number		
	
	Variable: IdVar				: Number	
	Variable: LpIdx				: Number
	Variable: RowId				: Number
	
	LIST VARIABLE 	: Ledger Map List 		: String
	LIST VARIABLE 	: Group Map List 		: String
	LIST VARIABLE 	: StockItem Map List 	: String
	LIST VARIABLE 	: VoucherType Map List 	: String

	Local Formula: Lc: $$ListCount:LedgerMapList
	
	100: Query Box: "Do you want to download masters" : Yes: No
	200: If: $$LastResult			
	300: 	START BLOCK
	400: 		Set Object: (Company, ##SVCurrentCompany).
	500: 		LIST FILL : LedgerMapList 		: APLedgers 		: $APId 		: $APTallyName
	510: 		LIST FILL : GroupMapList 		: APGroups 			: $APId 		: $APTallyName
	600: 		LIST FILL : StockItemMapList 	: APStockItems 		: $APHsnCode 	: $APTallyName
	700: 		LIST FILL : VoucherTypeMapList 	: APVoucherTypes 	: $APId 		: $APTallyName
	800: 	END BLOCK	
	900: 	START PROGRESS	: 5:"Downloading":"Masters"		
	1000: 	Walk Collection: AP Tally Export Master Data Source 			
	1100: 		SET TARGET	: (Company, ##SVCurrentCompany).
	1200: 		SET		: ProgressCount		: 1
	
	1300: 		Set: LpIdx: 1		
	1400: 		Walk Collection: accounts
	1500: 			If: $$ListFind:LedgerMapList:$$String:$id
	1600: 				Modify Object : (Company, ##SVCurrentCompany).ApLedgers[1, $APId=$id].APName : $name
	1700: 			Else				
	1800: 				INSERT COLLECTION OBJECT   : APLedgers
	1900: 				SET VALUE  : APId   		: $id
	2000: 				SET VALUE  : APName 		: $name
	2100: 				SET VALUE  : APAccountType	: $account_type_name
	2101:				If: Not $$IsEmpty:$gst_reg_type
	2102: 					SET VALUE  : APGstRegType	: $gst_reg_type
	2103:				End If
	2104:				If: Not $$IsEmpty:$gst_location
	2105: 					SET VALUE  : APGstLocation	: $gst_location
	2106:				End If
	2107:				If: Not $$IsEmpty:$gst_no
	2108: 					SET VALUE  : APGstNo		: $gst_no
	2109:				End If
	2110:				If: Not $$IsEmpty:$pan_no
	2111: 					SET VALUE  : APPanNo		: $pan_no
	2112:				Else 
	2113:					If: Not $$IsEmpty:$gst_no
	2114: 						SET VALUE  : APPanNo		: $$Substr:$gst_no:3:10
	2115:					End If
	2116:				End If
	2117:				If: Not $$IsEmpty:$address
	2118: 					SET VALUE  : APAddress		: $address
	2119:				End If
	2120:				If: Not $$IsEmpty:$state
	2121: 					SET VALUE  : APState		: $state
	2122:				End If
	2123:				If: Not $$IsEmpty:$country
	2124: 					SET VALUE  : APCountry		: $country
	2125:				End If
	2200: 				RESET VALUE  : APTallyName  	;; : $$SysName:NotApplicable
	2300: 				Set Target: .. 				
	2400: 			End If							
	2500: 			Increment: LpIdx
	2600: 		End Walk			

	2700: 		SHOW PROGRESS	: ##ProgressCount
	2800: 		INCREMENT		: ProgressCount			

	2900: 		Set: LpIdx: 1	
	3000: 		Walk Collection: hsns
	3100: 			If: $$ListFind:StockItemMapList:$hsn_code
	3200: 				Modify Object : (Company, ##SVCurrentCompany).ApStockItems[1, $APHsnCode=$hsn_code].APName : $name
	3300: 			Else	
	3400: 				INSERT COLLECTION OBJECT   : APStockItems
	3500: 				SET VALUE  : APHsnCode 	: $hsn_code
	3600: 				SET VALUE  : APName		: $name
	3700: 				RESET VALUE  : APTallyName  ;; 	: $$SysName:NotApplicable
	3800: 				Set Target: .. 	
	3900: 			End If	
	4000: 			Increment: LpIdx
	4100: 		End Walk		
	
	4200: 		SHOW PROGRESS	: ##ProgressCount
	4300: 		INCREMENT		: ProgressCount			
			
;	4400: 		Set: LpIdx: 1
;	4500: 		Walk Collection: units
;	4600: 			INSERT COLLECTION OBJECT   : APUnits
;	4700: 			SET VALUE  : APId   : $id
;	4800: 			SET VALUE  : APName : $name
;	4900: 			SET VALUE  : APUqc  : $uqc	
;	5000: 			RESET VALUE  : APTallyName ;; : $$SysName:NotApplicable
;	5100: 			Set Target: .. 
;	5200: 			Increment: LpIdx
;	5300: 		End Walk				

;	5400: 		SHOW PROGRESS	: ##ProgressCount
;	5500: 		INCREMENT		: ProgressCount			
	
	5600: 		Set: LpIdx: 1
	5700: 		Walk Collection: voucher_types
	5800: 			If: $$ListFind:VoucherTypeMapList:$$String:$id
	5900: 				Modify Object : (Company, ##SVCurrentCompany).ApVoucherTypes[1, $APId=$id].APName : $name
	6000: 			Else
	6100: 				INSERT COLLECTION OBJECT   : APVoucherTypes
	6200: 				SET VALUE  : APId   		: $id
	6300: 				SET VALUE  : APName 		: $name
	6400: 				SET VALUE  : APVoucherType	: $base_type
	6500: 				RESET VALUE  : APTallyName ;; 	: $$SysName:NotApplicable
	6600: 				Set Target: .. 
	6700: 			End If	
	6800: 			Increment: LpIdx
	6900: 		End Walk				
	
	7000: 		SHOW PROGRESS	: ##ProgressCount
	7100: 		INCREMENT		: ProgressCount		
	
	7200: 		Set: LpIdx: 1		
	7300: 		Walk Collection: account_types
	7400: 			If: $$ListFind:GroupMapList:$$String:$id
	7500: 				Modify Object : (Company, ##SVCurrentCompany).ApGroups[1, $APId=$id].APName : $name
	7600: 			Else				
	7700: 				INSERT COLLECTION OBJECT   : APGroups
	7800: 				SET VALUE  : APId   		: $id
	7900: 				SET VALUE  : APName 		: $name
	7910: 				SET VALUE  : APAccountType	: $base_types
	8000: 				RESET VALUE  : APTallyName  	;; : $$SysName:NotApplicable
	8100: 				Set Target: .. 				
	8200: 			End If							
	8300: 			Increment: LpIdx
	8400: 		End Walk
	
	8500: 		SHOW PROGRESS	: ##ProgressCount
	8600: 		INCREMENT		: ProgressCount		
	
	8700: 		Alter Target
	8800: 		END PROGRESS
	8900: 	End Walk		
	9000:End If



		







